{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Input = _interopRequireDefault(require(\"../Input\"));\n\nvar _InputTypes = _interopRequireDefault(require(\"../Input/InputTypes\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction execValidate(validate, props) {\n  if (typeof validate === 'function') {\n    return validate(props);\n  }\n\n  var fn = validate.validate,\n      error = validate.error;\n  var msg = fn(props);\n  return msg ? error || msg : '';\n}\n\nvar typeNames = Object.values(_InputTypes.default).map(function (InputType) {\n  return InputType.displayName;\n});\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n\n    _initialiseProps.call(_assertThisInitialized(_this));\n\n    _this.state = {\n      values: {},\n      errors: {},\n      valid: false\n    };\n    var children = _this.props.children;\n    var values = _this.state.values;\n\n    _react.default.Children.map(children, function (child) {\n      if (!Form._isValidElement(child)) return;\n      var _child$props = child.props,\n          name = _child$props.name,\n          value = _child$props.value;\n      if (value) values[name] = value;\n    });\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      // Removing invalid form props, to avoid warnings\n      var _props = _objectSpread({}, this.props);\n\n      var children = _props.children;\n      delete _props.onValidSubmit;\n      return _react.default.createElement(\"form\", _extends({}, _props, {\n        onSubmit: this.handleSubmit\n      }), this._createClones(children));\n    }\n  }]);\n\n  return Form;\n}(_react.default.Component);\n\nForm._isValidElement = function (element) {\n  return _react.default.isValidElement(element) && [_Input.default.displayName].concat(_toConsumableArray(typeNames)).includes(element.type.displayName);\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this._createClones = function (children) {\n    var _this2$state = _this2.state,\n        values = _this2$state.values,\n        errors = _this2$state.errors;\n    return _react.default.Children.map(children, function (child) {\n      if (!Form._isValidElement(child)) {\n        return child;\n      }\n\n      var _child$props2 = child.props,\n          name = _child$props2.name,\n          error = _child$props2.error,\n          _child$props2$onChang = _child$props2.onChange,\n          _onChange = _child$props2$onChang === void 0 ? function () {} : _child$props2$onChang;\n\n      return _react.default.cloneElement(child, {\n        value: values[name],\n        error: errors[name] || error,\n        onChange: function onChange(e) {\n          _this2._handleChange(e);\n\n          _onChange(e);\n        }\n      });\n    });\n  };\n\n  this._findError = function (child) {\n    var props = child.props;\n    var values = _this2.state.values;\n    var _props$validate = props.validate,\n        validate = _props$validate === void 0 ? function () {} : _props$validate;\n    var invalid;\n\n    var _props = _objectSpread({}, props, {\n      value: values[props.name]\n    });\n\n    if (Array.isArray(validate)) {\n      for (var i = 0; i < validate.length; i += 1) {\n        invalid = execValidate(validate[i], _props); // Stop validation when the first occurs\n\n        if (invalid) break;\n      }\n    } else {\n      invalid = execValidate(validate, _props);\n    }\n\n    if (invalid) {\n      _this2.setState({\n        valid: false\n      });\n    }\n\n    return invalid;\n  };\n\n  this._validateError = function (children) {\n    var errors = _this2.state.errors;\n    return _react.default.Children.map(children, function (child) {\n      var name = child.props.name;\n\n      var _error = _this2._findError(child);\n\n      var newError = errors;\n      newError[name] = _error;\n\n      _this2.setState({\n        errors: newError\n      });\n    });\n  };\n\n  this._handleChange = function (_ref) {\n    var _ref$target = _ref.target,\n        name = _ref$target.name,\n        value = _ref$target.value;\n    var _this2$state2 = _this2.state,\n        values = _this2$state2.values,\n        errors = _this2$state2.errors;\n\n    var newValues = _objectSpread({}, values, _defineProperty({}, name, value));\n\n    var newErrors = errors;\n    newErrors[name] = '';\n\n    _this2.setState({\n      errors: newErrors\n    });\n\n    _this2.setState({\n      values: newValues\n    });\n  };\n\n  this.handleSubmit = function (event) {\n    event.preventDefault();\n    var _this2$props = _this2.props,\n        onSubmit = _this2$props.onSubmit,\n        onValidSubmit = _this2$props.onValidSubmit,\n        children = _this2$props.children;\n    var _this2$state3 = _this2.state,\n        errors = _this2$state3.errors,\n        values = _this2$state3.values;\n\n    _this2._validateError(children);\n\n    var isValid = !Object.values(errors).find(function (e) {\n      return e;\n    });\n\n    _this2.setState({\n      valid: isValid\n    }, function () {\n      var updatedValid = _this2.state.valid;\n      onSubmit({\n        valid: updatedValid\n      });\n      if (isValid) onValidSubmit(values);\n    });\n  };\n};\n\nForm.defaultProps = {\n  onSubmit: function onSubmit() {},\n  onValidSubmit: function onValidSubmit() {},\n  noValidate: true\n};\nForm.propTypes = {\n  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]).isRequired,\n\n  /** A callback triggered every submit trial, with a flag that indicates that it is valid */\n  onSubmit: _propTypes.default.func,\n\n  /** A callback triggered every valid submit, with a object with input values */\n  onValidSubmit: _propTypes.default.func,\n\n  /** Default html attribute, that prevents default browser validations */\n  noValidate: _propTypes.default.bool\n};\nvar _default = Form;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}