{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar valueValidator = function valueValidator(props, propName, componentName) {\n  var value = props[propName];\n  var max = props.max,\n      min = props.min;\n  var errorMessage = \"\".concat(propName, \" prop supplied to \").concat(componentName, \" is out of bounds. The \").concat(propName, \" prop must be between \").concat(min, \" and \").concat(max, \".\");\n\n  var isNumber = function isNumber(val) {\n    return typeof val === 'number';\n  };\n\n  if (_typeof(value) === 'object') {\n    var from = value.from,\n        to = value.to;\n\n    if (!isNumber(from) || !isNumber(to)) {\n      return new Error(\"The 'from' and 'to' keys from \".concat(propName, \" prop must be a Number.\"));\n    }\n\n    if (from < min || to > max) {\n      return new Error(errorMessage);\n    }\n\n    return null;\n  }\n\n  if (!isNumber(value)) {\n    return new Error(\"\".concat(propName, \" prop must be a Number.\"));\n  }\n\n  if (value < min || value > max) {\n    return new Error(errorMessage);\n  }\n\n  return null;\n};\n\nvar _default = valueValidator;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}