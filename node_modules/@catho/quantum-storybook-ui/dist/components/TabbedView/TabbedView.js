"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabbedView = exports.Tab = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _Colors = _interopRequireDefault(require("../../ui/Colors"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  cursor: pointer;\n  font-size: 17px;\n  letter-spacing: initial;\n  line-height: initial;\n  overflow: hidden;\n  padding: 18px 18px 16px;\n  position: relative;\n  text-align: center;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  &::before {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 0;\n    height: 0;\n\n    transition: width 0.25s ease-out;\n  }\n\n  &:hover {\n    color: ", ";\n  }\n\n  ", ";\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  display: flex;\n  flex-grow: 1;\n  flex-shrink: 1;\n  list-style: none;\n  margin: 0 0 25px 0;\n  padding: 0;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var Navbar = _styledComponents.default.ul(_templateObject());

Navbar.displayName = 'Navbar';

var NavItem = _styledComponents.default.li(_templateObject2(), _Colors.default.blue.curious, function (props) {
  return props.active && "color: ".concat(_Colors.default.blue.curious, ";");
});

NavItem.displayName = 'NavItem';

var Tab = function Tab(_ref) {
  var children = _ref.children,
      title = _ref.title;
  return _react.default.createElement(_react.default.Fragment, null, title && children);
};

exports.Tab = Tab;
Tab.propTypes = {
  title: _propTypes.default.string.isRequired,
  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]).isRequired
};
Tab.displayName = 'Tab';

var renderIf = function renderIf(conditional, renderFn) {
  return conditional && renderFn();
};

var TabbedView =
/*#__PURE__*/
function (_React$Component) {
  _inherits(TabbedView, _React$Component);

  function TabbedView(props) {
    var _this;

    _classCallCheck(this, TabbedView);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(TabbedView).call(this, props));

    _defineProperty(_assertThisInitialized(_this), "onTabClick", function (tab) {
      var children = _this.props.children;

      _this.setState({
        activeTab: children.indexOf(tab)
      });
    });

    _this.state = {
      activeTab: 0
    };
    return _this;
  }

  _createClass(TabbedView, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var children = this.props.children;
      var activeTab = this.state.activeTab;
      return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(Navbar, null, _react.default.Children.map(children, function (tab) {
        return tab && _react.default.createElement(NavItem, {
          key: tab.props.title,
          onClick: function onClick() {
            return _this2.onTabClick(tab);
          },
          active: children.indexOf(tab) === activeTab
        }, tab.props.title);
      })), _react.default.Children.map(children, function (child) {
        return renderIf(children.indexOf(child) === activeTab, function () {
          return child;
        });
      }));
    }
  }]);

  return TabbedView;
}(_react.default.Component);

exports.TabbedView = TabbedView;
TabbedView.propTypes = {
  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]).isRequired
};
TabbedView.displayName = 'TabbedView';