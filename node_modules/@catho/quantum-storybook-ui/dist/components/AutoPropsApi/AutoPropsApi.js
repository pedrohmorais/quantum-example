"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactMarkdown = _interopRequireDefault(require("react-markdown"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Colors = _interopRequireDefault(require("../../ui/Colors"));

var _Title = _interopRequireDefault(require("../Title"));

var _Table = _interopRequireDefault(require("../Table"));

var _StoryContainer = _interopRequireDefault(require("../StoryContainer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  color: ", "\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var wrap = function wrap(name) {
  return function (children) {
    return _react.default.createElement("span", null, name, " [", children, "]");
  };
};

var failSafe = function failSafe(type) {
  return function () {
    return _react.default.createElement("span", null, "Sorry, unable to parse this propType:", _react.default.createElement("pre", null, JSON.stringify(type, null, 2)));
  };
};

var filterIgnoredProps = function filterIgnoredProps(prop, ignoreds) {
  if (!ignoreds) {
    return true;
  }

  return !ignoreds.includes(prop);
};

var removeQuotes = function removeQuotes(str) {
  return str.replace(/'/g, '');
};

var PropertyType = _styledComponents.default.code(_templateObject(), _Colors.default.pink.amaranth);

var renderPropType = function renderPropType() {
  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var typeHandlers = {
    custom: function custom() {
      return wrap('custom')();
    },
    enum: function _enum(value) {
      return wrap('oneOf')(value.map(function (v, i, allValues) {
        return _react.default.createElement("span", {
          key: v.value
        }, _react.default.createElement(PropertyType, null, removeQuotes(v.value)), allValues[i + 1] && ', ');
      }));
    },
    union: function union(value) {
      return wrap('oneOfType')(value.map(function (v, i, allValues) {
        return _react.default.createElement("span", {
          key: v.name.repeat(i)
        }, _react.default.createElement(PropertyType, null, renderPropType(v)), allValues[i + 1] && ', ');
      }));
    },
    shape: function shape(value) {
      return wrap('shape')(_react.default.createElement("ul", null, Object.keys(value).map(function (key) {
        return _objectSpread({}, value[key], {
          key: key
        });
      }).map(function (v) {
        return _react.default.createElement("li", {
          key: v.key
        }, v.key, ":\xA0", renderPropType(v), v.required && _react.default.createElement("small", null, _react.default.createElement("strong", null, "\xA0required")));
      })));
    },
    arrayOf: function arrayOf(value) {
      return wrap('arrayOf')(renderPropType(value));
    }
  };

  if (type.value) {
    return (typeHandlers[type.name] || failSafe(type))(type.value);
  }

  return _react.default.createElement(PropertyType, null, type.name);
};

var AutoPropsApi = function AutoPropsApi(_ref) {
  var Component = _ref.component,
      title = _ref.title,
      ignoredProps = _ref.ignoredProps;
  return _react.default.createElement(_StoryContainer.default, null, _react.default.createElement(_Title.default, {
    as: "h2"
  }, title || 'Available props'), Component.__docgenInfo && _react.default.createElement(_reactMarkdown.default, {
    source: Component.__docgenInfo.description
  }), _react.default.createElement(_Table.default, null, _react.default.createElement("thead", null, _react.default.createElement("tr", null, _react.default.createElement("th", null, "Name"), _react.default.createElement("th", null, "Type"), _react.default.createElement("th", null, "Default"), _react.default.createElement("th", null, "Required"), _react.default.createElement("th", null, "Description"))), _react.default.createElement("tbody", null, Component.__docgenInfo && Object.entries(Component.__docgenInfo.props).filter(function (_ref2) {
    var _ref3 = _slicedToArray(_ref2, 1),
        name = _ref3[0];

    return filterIgnoredProps(name, ignoredProps);
  }).map(function (_ref4) {
    var _ref5 = _slicedToArray(_ref4, 2),
        name = _ref5[0],
        value = _ref5[1];

    return _react.default.createElement("tr", {
      key: name
    }, _react.default.createElement("td", null, name), _react.default.createElement("td", null, renderPropType(value.type)), _react.default.createElement("td", null, value.defaultValue && removeQuotes(value.defaultValue.value)), _react.default.createElement("td", null, value.required ? 'Yes' : 'No'), _react.default.createElement("td", null, _react.default.createElement(_reactMarkdown.default, {
      source: value.description
    })));
  }))));
};

AutoPropsApi.defaultProps = {
  title: '',
  ignoredProps: []
};
AutoPropsApi.propTypes = {
  component: _propTypes.default.instanceOf(Object).isRequired,
  title: _propTypes.default.string,
  ignoredProps: _propTypes.default.arrayOf(_propTypes.default.string)
};
var _default = AutoPropsApi;
exports.default = _default;