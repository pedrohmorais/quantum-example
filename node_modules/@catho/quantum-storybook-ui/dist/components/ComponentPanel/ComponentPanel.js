"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _AutoProps = _interopRequireDefault(require("../AutoProps"));

var _LivePreview = _interopRequireDefault(require("../LivePreview"));

var _CodeExample = _interopRequireDefault(require("../CodeExample"));

var _StoryContainer = _interopRequireDefault(require("../StoryContainer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n  grid-area: code;\n"]);

  _templateObject4 = function _templateObject4() {
    return data;
  };

  return data;
}

function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n  grid-area: preview;\n"]);

  _templateObject3 = function _templateObject3() {
    return data;
  };

  return data;
}

function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  grid-area: props;\n"]);

  _templateObject2 = function _templateObject2() {
    return data;
  };

  return data;
}

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  display: grid;\n  grid-template-areas:\n    'props preview'\n    'props code';\n  grid-template-columns: 1fr 3fr;\n  grid-template-rows: 1fr 2fr;\n  grid-row-gap: 0px;\n  grid-column-gap: 15px;\n  margin-top: 90px;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var Panel = _styledComponents.default.main(_templateObject());

var Props = _styledComponents.default.div(_templateObject2());

var Preview = _styledComponents.default.div(_templateObject3());

var Code = _styledComponents.default.div(_templateObject4());

var ComponentPanel =
/*#__PURE__*/
function (_React$Component) {
  _inherits(ComponentPanel, _React$Component);

  function ComponentPanel(props) {
    var _this;

    _classCallCheck(this, ComponentPanel);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComponentPanel).call(this, props));

    _defineProperty(_assertThisInitialized(_this), "handleChange", function (newState) {
      var state = _objectSpread({}, _this.state, newState);

      _this.setState(state);
    });

    var componentProps = props.component.props;
    _this.state = componentProps;
    return _this;
  }

  _createClass(ComponentPanel, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          Component = _this$props.component,
          importModules = _this$props.importModules;
      return _react.default.createElement(_StoryContainer.default, null, _react.default.createElement(Panel, null, _react.default.createElement(Props, null, _react.default.createElement(_AutoProps.default, {
        component: Component,
        state: this.state,
        changeState: this.handleChange
      })), _react.default.createElement(Preview, null, _react.default.createElement(_LivePreview.default, {
        component: Component,
        state: this.state,
        onChange: this.handleChange
      })), _react.default.createElement(Code, null, _react.default.createElement(_CodeExample.default, {
        component: Component,
        state: this.state,
        withImport: importModules,
        title: "Importing and using"
      }))));
    }
  }]);

  return ComponentPanel;
}(_react.default.Component);

ComponentPanel.propTypes = {
  importModules: _propTypes.default.string.isRequired,
  component: _propTypes.default.instanceOf(Object).isRequired
};
var _default = ComponentPanel;
exports.default = _default;