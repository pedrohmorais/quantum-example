"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _react = _interopRequireDefault(require("react"));

var _reactTextMask = _interopRequireDefault(require("react-text-mask"));

var _shared = require("../shared");

var _Colors = _interopRequireDefault(require("../Colors"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _InputTypes = _interopRequireDefault(require("./InputTypes"));

var _uniqId = _interopRequireDefault(require("../shared/uniqId"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ID_GENERATOR = (0, _uniqId.default)('input-');
var DEFAULT_INPUT_STYLE = _shared.INPUT_STYLE.default,
    LABEL_STYLE = _shared.INPUT_STYLE.LABEL_STYLE,
    HELPER_TEXT_STYLE = _shared.INPUT_STYLE.HELPER_TEXT_STYLE,
    REQUIRED_MARK_STYLE = _shared.INPUT_STYLE.REQUIRED_MARK_STYLE,
    ERROR_MESSAGE_STYLE = _shared.INPUT_STYLE.ERROR_MESSAGE_STYLE,
    AUTO_FILL_STYLE = _shared.INPUT_STYLE.AUTO_FILL_STYLE;
var InputLabel = (0, _styledComponents.default)(_shared.Label).withConfig({
  displayName: "Input__InputLabel",
  componentId: "sc-16zet9e-0"
})(["", ""], LABEL_STYLE);

var InputTag = _styledComponents.default.input.withConfig({
  displayName: "Input__InputTag",
  componentId: "sc-16zet9e-1"
})(["box-sizing:border-box;margin-top:8px;padding-right:42px;&::-webkit-inner-spin-button,&::-webkit-outer-spin-button{-webkit-appearance:none;margin:0;}", ";", " ", " &::-webkit-calendar-picker-indicator{display:none;}:-webkit-autofill{", "}"], DEFAULT_INPUT_STYLE, function (_ref) {
  var searchable = _ref.searchable;
  return searchable && "\n    padding: 10px 42px;\n  ";
}, function (_ref2) {
  var password = _ref2.password;
  return password && "\n    padding-right: 28px;\n  ";
}, AUTO_FILL_STYLE);

var InputIcon = (0, _styledComponents.default)(_Icon.default).withConfig({
  displayName: "Input__InputIcon",
  componentId: "sc-16zet9e-2"
})(["cursor:pointer;position:absolute;right:12px;bottom:10px;"]);
var InputSearchIcon = (0, _styledComponents.default)(InputIcon).withConfig({
  displayName: "Input__InputSearchIcon",
  componentId: "sc-16zet9e-3"
})(["left:12px;"]);
var InputErrorIcon = (0, _styledComponents.default)(InputIcon).withConfig({
  displayName: "Input__InputErrorIcon",
  componentId: "sc-16zet9e-4"
})(["color:", ";"], _Colors.default.ERROR['500']);
var InputErrorMessage = (0, _styledComponents.default)(_shared.ErrorMessage).withConfig({
  displayName: "Input__InputErrorMessage",
  componentId: "sc-16zet9e-5"
})(["", " ", ""], ERROR_MESSAGE_STYLE, function (_ref3) {
  var helperText = _ref3.helperText;
  return helperText && "\n    padding-top: 2px;\n  ";
});

var HelperText = _styledComponents.default.span.withConfig({
  displayName: "Input__HelperText",
  componentId: "sc-16zet9e-6"
})(["", ""], HELPER_TEXT_STYLE);

var DescriptionLabel = _styledComponents.default.span.withConfig({
  displayName: "Input__DescriptionLabel",
  componentId: "sc-16zet9e-7"
})(["cursor:text;display:block;font-size:14px;padding:0px 12px;"]);

var RequiredMark = _styledComponents.default.em.withConfig({
  displayName: "Input__RequiredMark",
  componentId: "sc-16zet9e-8"
})(["", ""], REQUIRED_MARK_STYLE);

var InputWrapper = _styledComponents.default.div.withConfig({
  displayName: "Input__InputWrapper",
  componentId: "sc-16zet9e-9"
})(["position:relative;"]);

InputIcon.displayName = 'InputIcon';
InputSearchIcon.displayName = 'InputSearchIcon';
InputErrorIcon.displayName = 'InputErrorIcon';
HelperText.displayName = 'HelperText';
DescriptionLabel.displayName = 'DescriptionLabel';
InputTag.displayName = 'InputTag';
InputLabel.displayName = 'InputLabel';
/** A text field component to get user text data */

var Input =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Input, _React$Component);

  function Input(props) {
    var _this;

    _classCallCheck(this, Input);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Input).call(this, props));

    _initialiseProps.call(_assertThisInitialized(_this));

    var type = props.type,
        id = props.id;
    _this.state = {
      type: type
    };
    _this._id = id || ID_GENERATOR.next().value;
    return _this;
  }

  _createClass(Input, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          label = _this$props.label,
          error = _this$props.error,
          typeProp = _this$props.type,
          descriptionLabel = _this$props.descriptionLabel,
          helperText = _this$props.helperText,
          required = _this$props.required,
          value = _this$props.value,
          onClean = _this$props.onClean,
          rest = _objectWithoutProperties(_this$props, ["label", "error", "type", "descriptionLabel", "helperText", "required", "value", "onClean"]);

      var typeState = this.state.type;

      var _isSearchType = typeProp === 'search';

      return _react.default.createElement(_shared.FieldGroup, null, label && _react.default.createElement(InputLabel, {
        htmlFor: this._id,
        error: error
      }, label, required && _react.default.createElement(RequiredMark, null, "*")), descriptionLabel && _react.default.createElement(DescriptionLabel, null, descriptionLabel), _react.default.createElement(InputWrapper, null, _isSearchType && _react.default.createElement(InputSearchIcon, {
        name: "search",
        description: descriptionLabel
      }), _react.default.createElement(_reactTextMask.default, _extends({}, rest, {
        id: this._id,
        required: required,
        type: typeState,
        value: value,
        render: function render(ref, props) {
          return _react.default.createElement(InputTag, _extends({
            ref: ref,
            error: error,
            searchable: _isSearchType
          }, props));
        }
      })), error && _react.default.createElement(InputErrorIcon, {
        name: "error",
        description: descriptionLabel
      }), typeProp === 'password' && !error && _react.default.createElement(InputIcon, {
        name: typeState === 'password' ? 'visibility' : 'visibility_off',
        description: descriptionLabel,
        onClick: this._toggleInputType
      }), !!value && !error && _react.default.createElement(InputIcon, {
        name: "cancel",
        description: descriptionLabel,
        onClick: onClean
      })), helperText && _react.default.createElement(HelperText, null, helperText), error && _react.default.createElement(InputErrorMessage, {
        helperText: helperText
      }, error));
    }
  }]);

  return Input;
}(_react.default.Component);

Input.CEP = _InputTypes.default.CEP;
Input.CNPJ = _InputTypes.default.CNPJ;
Input.CPF = _InputTypes.default.CPF;
Input.Date = _InputTypes.default.Date;
Input.Phone = _InputTypes.default.Phone;
Input.Password = _InputTypes.default.Password;

var _initialiseProps = function _initialiseProps() {
  var _this2 = this;

  this._changeType = function (type) {
    _this2.setState({
      type: type
    });
  };

  this._toggleInputType = function () {
    var type = _this2.state.type;

    _this2._changeType(type === 'text' ? 'password' : 'text');
  };
};

Input.defaultProps = {
  error: '',
  id: '',
  label: '',
  mask: function mask(val) {
    return Array(val.length).fill(/./);
  },
  type: 'text',
  value: '',
  helperText: '',
  descriptionLabel: '',
  required: false,
  placeholder: '',
  onClean: function onClean() {}
};
Input.propTypes = {
  value: _propTypes.default.string,

  /** Displays a label text that describes the field */
  label: _propTypes.default.string,

  /** Displays a helper text below the input */
  helperText: _propTypes.default.string,

  /** Displays a description text below the label */
  descriptionLabel: _propTypes.default.string,
  required: _propTypes.default.bool,
  placeholder: _propTypes.default.string,
  type: _propTypes.default.oneOf(['email', 'text', 'tel', 'number', 'password', 'search']),

  /** Displays an error message and changes border color to error color */
  error: _propTypes.default.string,
  id: _propTypes.default.string,

  /**
   * Mask must follow this [rules](https://github.com/text-mask/text-mask/blob/master/componentDocumentation.md#mask)
   */
  mask: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.bool, _propTypes.default.instanceOf(RegExp), _propTypes.default.func, _propTypes.default.string]),
  onClean: _propTypes.default.func
};
Input.displayName = 'Input';
var _default = Input;
exports.default = _default;