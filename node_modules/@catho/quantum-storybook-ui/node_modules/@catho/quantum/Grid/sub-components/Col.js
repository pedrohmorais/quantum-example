"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _shared = require("./shared");

var _shared2 = require("../../shared");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _templateObject() {
  var data = _taggedTemplateLiteral(["grid-column: ", " span ", ";"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var columnPosition = function columnPosition(_ref, breakpoint) {
  var xsmall = _ref.xsmall,
      _ref$small = _ref.small,
      small = _ref$small === void 0 ? xsmall : _ref$small,
      _ref$medium = _ref.medium,
      medium = _ref$medium === void 0 ? small : _ref$medium,
      _ref$large = _ref.large,
      large = _ref$large === void 0 ? medium : _ref$large,
      _ref$xlarge = _ref.xlarge,
      xlarge = _ref$xlarge === void 0 ? large : _ref$xlarge,
      xsmallOffset = _ref['xsmall-offset'],
      _ref$smallOffset = _ref['small-offset'],
      smallOffset = _ref$smallOffset === void 0 ? xsmallOffset : _ref$smallOffset,
      _ref$mediumOffset = _ref['medium-offset'],
      mediumOffset = _ref$mediumOffset === void 0 ? smallOffset : _ref$mediumOffset,
      _ref$largeOffset = _ref['large-offset'],
      largeOffset = _ref$largeOffset === void 0 ? mediumOffset : _ref$largeOffset,
      _ref$xlargeOffset = _ref['xlarge-offset'],
      xlargeOffset = _ref$xlargeOffset === void 0 ? largeOffset : _ref$xlargeOffset;
  var q = _shared.query[breakpoint];
  var _xsmall$small$medium$ = {
    xsmall: {
      size: xsmall,
      offset: xsmallOffset
    },
    small: {
      size: small,
      offset: smallOffset
    },
    medium: {
      size: medium,
      offset: mediumOffset
    },
    large: {
      size: large,
      offset: largeOffset
    },
    xlarge: {
      size: xlarge,
      offset: xlargeOffset
    }
  }[breakpoint],
      size = _xsmall$small$medium$.size,
      offset = _xsmall$small$medium$.offset;
  var offsetStyle = offset ? "".concat(offset + 1, "/") : '';
  return q(_templateObject(), offsetStyle, size || 12);
};

var Col = _styledComponents.default.div.withConfig({
  displayName: "Col",
  componentId: "o5r7t1-0"
})(["", " word-break:break-word;box-sizing:border-box;"], function (props) {
  return Object.keys(_shared2.BREAKPOINTS).map(function (breakpoint) {
    return columnPosition(props, breakpoint);
  });
});

Col.propTypes = {
  xsmall: _propTypes.default.number,
  small: _propTypes.default.number,
  medium: _propTypes.default.number,
  large: _propTypes.default.number,
  xlarge: _propTypes.default.number,
  'xsmall-offset': _propTypes.default.number,
  'small-offset': _propTypes.default.number,
  'medium-offset': _propTypes.default.number,
  'large-offset': _propTypes.default.number,
  'xlarge-offset': _propTypes.default.number,
  hide: _propTypes.default.oneOfType([_propTypes.default.oneOf(Object.keys(_shared2.BREAKPOINTS)), _propTypes.default.arrayOf(_propTypes.default.string)])
};
Col.displayName = 'Col';
var _default = Col;
exports.default = _default;