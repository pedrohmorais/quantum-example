"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hideQueries = exports.query = void 0;

var _styledComponents = require("styled-components");

var _shared = require("../../../shared");

var query = Object.keys(_shared.BREAKPOINTS).reduce(function (acc, label) {
  acc[label] = function () {
    return (0, _styledComponents.css)(["@media (min-width:", "px){", ";}"], _shared.BREAKPOINTS[label].width, _styledComponents.css.apply(void 0, arguments));
  };

  return acc;
}, {});
exports.query = query;
var hideQueries = {
  xlarge: function xlarge() {
    return "\n    @media (min-width: ".concat(_shared.BREAKPOINTS.xlarge.width + 1, "px) {\n      display: none !important;\n    }\n  ");
  },
  large: function large() {
    return "\n    @media (min-width: ".concat(_shared.BREAKPOINTS.large.width + 1, "px) and (max-width: ").concat(_shared.BREAKPOINTS.xlarge.width, "px) {\n      display: none !important;\n    }\n  ");
  },
  medium: function medium() {
    return "\n    @media (min-width: ".concat(_shared.BREAKPOINTS.medium.width + 1, "px) and (max-width: ").concat(_shared.BREAKPOINTS.large.width, "px) {\n      display: none !important;\n    }\n  ");
  },
  small: function small() {
    return "\n    @media (min-width: ".concat(_shared.BREAKPOINTS.small.width + 1, "px) and (max-width: ").concat(_shared.BREAKPOINTS.medium.width, "px) {\n      display: none !important;\n    }\n  ");
  },
  xsmall: function xsmall() {
    return "\n    @media (max-width: ".concat(_shared.BREAKPOINTS.small.width, "px) {\n      display: none !important;\n    }\n  ");
  }
};
exports.hideQueries = hideQueries;