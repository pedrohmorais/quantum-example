"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _shared = require("./shared");

var _shared2 = require("../../shared");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n      grid-template-columns: repeat(", ", 1fr);\n    "]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var queryStyle = function queryStyle() {
  return Object.entries(_shared2.BREAKPOINTS).map(function (_ref) {
    var _ref2 = _slicedToArray(_ref, 2),
        name = _ref2[0],
        columns = _ref2[1].columns;

    return _shared.query[name](_templateObject(), columns);
  });
};

var Row = _styledComponents.default.div.withConfig({
  displayName: "Row",
  componentId: "tx22b8-0"
})(["display:grid;grid-column-gap:var(--gutter);grid-row-gap:var(--gutter);margin-bottom:var(--gutter);grid-auto-columns:max-content;", " ", " ", ""], queryStyle, _shared.hide, _shared.noGutters);

Row.propTypes = {
  'no-gutters': _propTypes.default.bool,
  hide: _propTypes.default.oneOfType([_propTypes.default.oneOf(Object.keys(_shared2.BREAKPOINTS)), _propTypes.default.arrayOf(_propTypes.default.string)])
};
Row.defaultProps = {
  'no-gutters': false
};
Row.displayName = 'Row';
var _default = Row;
exports.default = _default;