"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _shared = require("./shared");

var _shared2 = require("../../shared");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _templateObject() {
  var data = _taggedTemplateLiteral(["max-width: ", "px;"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var maxWidth = function maxWidth(_ref) {
  var name = _ref.name;

  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref2$width = _ref2.width,
      nextWidth = _ref2$width === void 0 ? 0 : _ref2$width;

  var fluid = arguments.length > 2 ? arguments[2] : undefined;
  return !fluid && Boolean(nextWidth) && _shared.query[name](_templateObject(), nextWidth);
};

var Container = _styledComponents.default.div.withConfig({
  displayName: "Container",
  componentId: "ka34zl-0"
})(["width:", ";box-sizing:border-box;padding:var(--gutter);margin-right:auto;margin-left:auto;", " ", " ", ""], function (props) {
  return props.width || '100%';
}, function (_ref3) {
  var fluid = _ref3.fluid;
  return Object.entries(_shared2.BREAKPOINTS).map(function (_ref4) {
    var _ref5 = _slicedToArray(_ref4, 2),
        name = _ref5[0],
        value = _ref5[1];

    return _objectSpread({
      name: name
    }, value);
  }).sort(function (a, b) {
    return a.width - b.width;
  }).map(function (breakpoint, i, list) {
    return maxWidth(breakpoint, list[i + 1], fluid);
  });
}, _shared.hide, _shared.noGutters);

Container.propTypes = {
  width: _propTypes.default.string,
  fluid: _propTypes.default.bool,
  hide: _propTypes.default.oneOfType([_propTypes.default.oneOf(Object.keys(_shared2.BREAKPOINTS)), _propTypes.default.arrayOf(_propTypes.default.string)])
};
Container.defaultProps = {
  fluid: false,
  'no-gutters': false
};
Container.displayName = 'Container';
var _default = Container;
exports.default = _default;