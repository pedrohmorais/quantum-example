"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Colors = _interopRequireDefault(require("../../Colors"));

var _ActionButton = _interopRequireDefault(require("./ActionButton"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Info = _styledComponents.default.span.withConfig({
  displayName: "Mobile__Info",
  componentId: "sc-1h7l4jx-0"
})(["border-bottom:1px solid;border-top:1px solid;border-color:", ";color:", ";padding:8px 16px;transition:background-color 0.2s ease-in-out,color 0.2s ease-in-out;:hover{background-color:", ";strong{color:", ";}}"], _Colors.default.BLACK['200'], _Colors.default.BLACK['700'], _Colors.default.BLUE['200'], _Colors.default.BLUE['500']);

var StyledActionButton = (0, _styledComponents.default)(_ActionButton.default).withConfig({
  displayName: "Mobile__StyledActionButton",
  componentId: "sc-1h7l4jx-1"
})(["border-color:", ";", " ", ""], _Colors.default.BLACK['200'], function (_ref) {
  var rightSquared = _ref.rightSquared;
  return rightSquared ? "\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    margin: 0;\n  " : '';
}, function (_ref2) {
  var leftSquared = _ref2.leftSquared;
  return leftSquared ? "\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n    margin: 0;\n  " : '';
});
Info.displayName = 'Info';

var Mobile = function Mobile(_ref3) {
  var activePage = _ref3.activePage,
      handlePageClick = _ref3.handlePageClick,
      handleHref = _ref3.handleHref,
      prevButtonText = _ref3.prevButtonText,
      nextButtonText = _ref3.nextButtonText,
      totalPages = _ref3.totalPages,
      infoFormatter = _ref3.infoFormatter;
  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(StyledActionButton, {
    "aria-disabled": activePage === 1,
    onClick: handlePageClick(activePage - 1),
    href: handleHref(activePage - 1),
    rightSquared: true
  }, prevButtonText), _react.default.createElement(Info, null, infoFormatter(activePage, totalPages)), _react.default.createElement(StyledActionButton, {
    "aria-disabled": activePage === totalPages,
    onClick: handlePageClick(activePage + 1),
    href: handleHref(activePage + 1),
    leftSquared: true
  }, nextButtonText));
};

Mobile.propTypes = {
  activePage: _propTypes.default.number,
  totalPages: _propTypes.default.number.isRequired,
  infoFormatter: _propTypes.default.func,
  nextButtonText: _propTypes.default.string,
  prevButtonText: _propTypes.default.string,
  handleHref: _propTypes.default.func,
  handlePageClick: _propTypes.default.func
};
Mobile.defaultProps = {
  activePage: 1,
  nextButtonText: 'Next',
  prevButtonText: 'Previous',
  infoFormatter: function infoFormatter(activePage, lastPage) {
    return "".concat(activePage, " of ").concat(lastPage);
  },
  handleHref: function handleHref() {},
  handlePageClick: function handlePageClick() {}
};
var _default = Mobile;
exports.default = _default;