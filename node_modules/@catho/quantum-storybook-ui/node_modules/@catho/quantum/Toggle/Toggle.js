"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Colors = _interopRequireDefault(require("../Colors"));

var _Icon = _interopRequireDefault(require("../Icon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var CheckIcon = (0, _styledComponents.default)(_Icon.default).attrs({
  name: 'check'
}).withConfig({
  displayName: "Toggle__CheckIcon",
  componentId: "sc-17b9usn-0"
})([""]);
var CloseIcon = (0, _styledComponents.default)(_Icon.default).attrs({
  name: 'close'
}).withConfig({
  displayName: "Toggle__CloseIcon",
  componentId: "sc-17b9usn-1"
})([""]);

var Wrapper = _styledComponents.default.div.withConfig({
  displayName: "Toggle__Wrapper",
  componentId: "sc-17b9usn-2"
})(["display:inline-block;position:relative;pointer-events:none;"]);

var Switch = _styledComponents.default.div.withConfig({
  displayName: "Toggle__Switch",
  componentId: "sc-17b9usn-3"
})(["cursor:pointer;display:inline-block;height:24px;padding-left:42px;&:before{background-color:", ";border-radius:16px;content:'';height:24px;position:absolute;left:0;top:0;width:42px;transition:background-color 0.2s ease-in-out,color 0.2s ease-in-out,transform 0.2s ease-in-out;}", ",", "{align-items:center;background-color:", ";border-radius:50%;display:flex;color:", ";font-size:12px;height:20px;justify-content:center;position:absolute;left:2px;top:2px;visibility:hidden;width:20px;transition:transform 0.2s ease-in-out;}", "{visibility:visible;}"], _Colors.default.BLACK[400], CloseIcon, CheckIcon, _Colors.default.BLACK[100], _Colors.default.BLACK[400], CloseIcon);

var HiddenCheckbox = _styledComponents.default.input.attrs({
  type: 'checkbox',
  role: 'switch'
}).withConfig({
  displayName: "Toggle__HiddenCheckbox",
  componentId: "sc-17b9usn-4"
})(["cursor:pointer;height:24px;left:0;opacity:0;position:absolute;pointer-events:initial;width:100%;&:focus + ", ":before{box-shadow:0 2px 6px 0 ", ";}&:hover + ", ":before{background-color:", ";}&:checked + ", " ", "{visibility:hidden;transform:translateX(18px);}&:checked + ", " ", "{visibility:visible;}&:checked + ", ":before{background-color:", ";}&:checked:hover + ", ":before{background-color:", ";}&:checked + ", " ", "{background-color:", ";color:", ";transform:translateX(18px);}"], Switch, _Colors.default.BLUE[50], Switch, _Colors.default.BLACK[700], Switch, CloseIcon, Switch, CheckIcon, Switch, _Colors.default.BLUE[500], Switch, _Colors.default.COBALT[500], Switch, CheckIcon, _Colors.default.BLUE[200], _Colors.default.BLUE[500]);

HiddenCheckbox.displayName = 'HiddenCheckbox';

var Toggle = function Toggle(_ref) {
  var checked = _ref.checked,
      rest = _objectWithoutProperties(_ref, ["checked"]);

  return _react.default.createElement(Wrapper, null, _react.default.createElement(HiddenCheckbox, _extends({
    checked: checked
  }, rest)), _react.default.createElement(Switch, null, _react.default.createElement(CloseIcon, null), _react.default.createElement(CheckIcon, null)));
};

Toggle.defaultProps = {
  checked: null
};
Toggle.propTypes = {
  checked: _propTypes.default.bool
};
var _default = Toggle;
exports.default = _default;