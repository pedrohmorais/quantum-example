"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _deprecated = _interopRequireDefault(require("../Colors/deprecated"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  font: {
    weight: 500,
    normal: '12px',
    big: '16px'
  },
  sizes: {
    radius: '4px',
    fieldHeight: '40px',
    spacing: '20px',
    loading: '60px'
  },
  mixins: {
    hexToRgba: function hexToRgba(color, opacity) {
      var R = parseInt(color.substring(1, 3), 16);
      var G = parseInt(color.substring(3, 5), 16);
      var B = parseInt(color.substring(5, 7), 16);
      return "rgba(".concat(R, ", ").concat(G, ", ").concat(B, ", ").concat(opacity, ")");
    },
    transition: function transition() {
      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'all';
      var timing = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '0.2s';
      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'ease-in-out';
      return "transition: ".concat(property, " ").concat(timing, " ").concat(type);
    },
    shadow: function shadow() {
      var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      var shadows = ['box-shadow: none;', "box-shadow: 0 2px 5px ".concat(this.hexToRgba(_deprecated.default.SECONDARY['600'], 0.3), ";"), "box-shadow: 0 2px 6px ".concat(this.hexToRgba(_deprecated.default.SECONDARY['600'], 0.6), ";")];
      return shadows[size] || shadows[1];
    }
  }
};
exports.default = _default;