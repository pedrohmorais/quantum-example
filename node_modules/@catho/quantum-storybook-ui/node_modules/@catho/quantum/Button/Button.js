"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Icon = _interopRequireDefault(require("../Icon/Icon"));

var _Colors = _interopRequireDefault(require("../Colors"));

var _buttonStyle = _interopRequireDefault(require("./buttonStyle"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var iconSize = function iconSize(_ref) {
  var size = _ref.size;
  var sizes = {
    xsmall: '16px',
    small: '16px',
    normal: '24px',
    large: '24px',
    xlarge: '24px'
  };
  return "font-size: ".concat(sizes[size] || sizes.normal, ";");
};

var ButtonIcon = (0, _styledComponents.default)(_Icon.default).withConfig({
  displayName: "Button__ButtonIcon",
  componentId: "sc-1ovnfsw-0"
})(["pointer-events:none;"]);

var StyledButton = _styledComponents.default.button.withConfig({
  displayName: "Button__StyledButton",
  componentId: "sc-1ovnfsw-1"
})(["", " ", "{", "}"], _buttonStyle.default, ButtonIcon, iconSize);

var Button = function Button(_ref2) {
  var children = _ref2.children,
      icon = _ref2.icon,
      size = _ref2.size,
      rest = _objectWithoutProperties(_ref2, ["children", "icon", "size"]);

  return _react.default.createElement(StyledButton, _extends({}, rest, {
    size: size
  }), icon && _react.default.createElement(ButtonIcon, {
    size: size,
    name: icon
  }), children && _react.default.createElement("span", null, children));
};

Button.defaultProps = {
  center: false,
  disabled: false,
  full: false,
  icon: '',
  size: 'medium',
  skin: 'primary',
  type: 'button',
  children: undefined,
  onClick: function onClick() {}
};
Button.propTypes = {
  center: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  full: _propTypes.default.bool,

  /** Icon name. The full catalogue can be found
   * [here](/?selectedKind=1.%20Foundation&selectedStory=Icons) */
  icon: _propTypes.default.string,
  size: _propTypes.default.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']),
  skin: _propTypes.default.oneOf(['primary', 'secondary', 'action', 'link']),
  type: _propTypes.default.oneOf(['button', 'reset', 'submit']),
  children: _propTypes.default.string,
  onClick: _propTypes.default.func
};
var IconButton = (0, _styledComponents.default)(Button).withConfig({
  displayName: "Button__IconButton",
  componentId: "sc-1ovnfsw-2"
})(["border-radius:50%;border:none;color:", ";width:40px;background-color:transparent;box-shadow:none;outline:none;:hover,:focus{box-shadow:none;background-color:", ";color:", ";}:active{box-shadow:none;background-color:", ";color:", ";}"], _Colors.default.SHADOW[50], _Colors.default.SHADOW[40], _Colors.default.BLACK[700], _Colors.default.SHADOW[50], _Colors.default.BLACK[700]);
Button.Icon = IconButton;
var _default = Button;
exports.default = _default;