"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _downshift = _interopRequireDefault(require("downshift"));

var _Icon = _interopRequireDefault(require("../Icon/Icon"));

var _Colors = _interopRequireDefault(require("../Colors"));

var _shared = require("../shared");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ITEM_HEIGHT = '44px';
var MAX_ITEMS_VISIBILITY = 7;
var HOVER_STYLE = _shared.INPUT_STYLE.HOVER_STYLE,
    ERROR_HOVER_STYLE = _shared.INPUT_STYLE.ERROR_HOVER_STYLE,
    DEFAULT_STYLE = _shared.INPUT_STYLE.default,
    REQUIRED_MARK_STYLE = _shared.INPUT_STYLE.REQUIRED_MARK_STYLE,
    ERROR_MESSAGE_STYLE = _shared.INPUT_STYLE.ERROR_MESSAGE_STYLE;

var DropButton = _styledComponents.default.button.withConfig({
  displayName: "Dropdown__DropButton",
  componentId: "xoew8d-0"
})(["align-items:center;cursor:pointer;display:flex;justify-content:space-between;", ";", ";", ";"], DEFAULT_STYLE, function (_ref) {
  var text = _ref.text;
  return !text && 'flex-direction: row-reverse;';
}, function (_ref2) {
  var selectedItem = _ref2.selectedItem;
  return !selectedItem && "color: ".concat(_Colors.default.BLACK[400]);
});

var DropLabel = (0, _styledComponents.default)(_shared.Label).withConfig({
  displayName: "Dropdown__DropLabel",
  componentId: "xoew8d-1"
})(["margin-bottom:8px;padding-left:13.5px;", ";"], function (_ref3) {
  var error = _ref3.error,
      disabled = _ref3.disabled;
  return !disabled && (0, _styledComponents.css)([":hover ~ ", ",:focus ~ ", "{", ";}"], DropButton, DropButton, error ? ERROR_HOVER_STYLE : HOVER_STYLE);
});
DropLabel.displayName = 'DropLabel';
var ArrowDown = (0, _styledComponents.default)(_Icon.default).attrs({
  name: 'keyboard_arrow_down'
}).withConfig({
  displayName: "Dropdown__ArrowDown",
  componentId: "xoew8d-2"
})(["color:", ";font-size:1.5em;pointer-events:none;"], _Colors.default.BLACK['700']);
var InputArrowDown = (0, _styledComponents.default)(ArrowDown).withConfig({
  displayName: "Dropdown__InputArrowDown",
  componentId: "xoew8d-3"
})(["position:absolute;top:12px;right:14px;"]);

var DropList = _styledComponents.default.ul.withConfig({
  displayName: "Dropdown__DropList",
  componentId: "xoew8d-4"
})(["background-color:", ";border-radius:4px;border:solid 1.5px ", ";box-shadow:0 2px 6px 0 ", ";box-sizing:border-box;list-style:none;margin-top:4px;max-height:calc(", " * ", ");overflow:auto;padding:0;position:absolute;width:100%;z-index:9999;"], _Colors.default.WHITE, _Colors.default.BLACK[100], _Colors.default.SHADOW[40], ITEM_HEIGHT, MAX_ITEMS_VISIBILITY);

var CheckIcon = (0, _styledComponents.default)(_Icon.default).attrs({
  name: 'check'
}).withConfig({
  displayName: "Dropdown__CheckIcon",
  componentId: "xoew8d-5"
})(["color:", ";"], _Colors.default.BLUE['500']);

var DropItem = _styledComponents.default.li.withConfig({
  displayName: "Dropdown__DropItem",
  componentId: "xoew8d-6"
})(["background-color:", ";border-bottom:solid 1.5px ", ";box-sizing:border-box;cursor:pointer;height:", ";padding:10px 15px;:last-child{border-bottom-width:0;}&[aria-selected='true']{background-color:", ";}", ""], _Colors.default.WHITE, _Colors.default.BLACK[100], ITEM_HEIGHT, _Colors.default.BLUE[200], function (_ref4) {
  var isSelected = _ref4.isSelected;
  return isSelected && "\n    display: flex;\n    justify-content: space-between;\n  ";
});

var DropError = (0, _styledComponents.default)(_shared.ErrorMessage).withConfig({
  displayName: "Dropdown__DropError",
  componentId: "xoew8d-7"
})(["", ""], ERROR_MESSAGE_STYLE);

var DropContainer = _styledComponents.default.div.withConfig({
  displayName: "Dropdown__DropContainer",
  componentId: "xoew8d-8"
})(["position:relative;"]);

var RequiredMark = _styledComponents.default.em.withConfig({
  displayName: "Dropdown__RequiredMark",
  componentId: "xoew8d-9"
})(["", ""], REQUIRED_MARK_STYLE);

var _getValue = function _getValue(item) {
  return item ? item.value || item.label || item : '';
};

var _getLabel = function _getLabel(item) {
  return item ? item.label || item.value || item : '';
};

var _isEqual = function _isEqual(selected, item) {
  return _getValue(selected) === _getValue(item);
};

var Dropdown = function Dropdown(_ref5) {
  var label = _ref5.label,
      error = _ref5.error,
      required = _ref5.required,
      disabled = _ref5.disabled,
      items = _ref5.items,
      placeholder = _ref5.placeholder,
      selectedItem = _ref5.selectedItem,
      onChange = _ref5.onChange,
      autocomplete = _ref5.autocomplete,
      rest = _objectWithoutProperties(_ref5, ["label", "error", "required", "disabled", "items", "placeholder", "selectedItem", "onChange", "autocomplete"]);

  var _buttonLabel = selectedItem ? _getLabel(selectedItem) : placeholder;

  var _highlightedReducer = function _highlightedReducer(_ref6, changes) {
    var selected = _ref6.selectedItem;

    if (changes.isOpen !== undefined && changes.isOpen) {
      var selectedIndex = items.map(_getValue).indexOf(_getValue(selected));
      var withRange = selectedIndex + Math.floor(MAX_ITEMS_VISIBILITY / 2);
      var length = items.length;
      return _objectSpread({}, changes, {
        highlightedIndex: withRange < length ? withRange : length - 1
      });
    }

    return changes;
  };

  var inputFilter = function inputFilter(value) {
    return items.filter(function (item) {
      return item.toLowerCase().indexOf(value.toLowerCase()) > -1;
    });
  };

  return _react.default.createElement(_shared.FieldGroup, null, _react.default.createElement(_downshift.default, _extends({}, rest, {
    selectedItem: selectedItem,
    onChange: onChange,
    itemToString: _getValue,
    stateReducer: _highlightedReducer
  }), function (_ref7) {
    var getRootProps = _ref7.getRootProps,
        getLabelProps = _ref7.getLabelProps,
        getInputProps = _ref7.getInputProps,
        getToggleButtonProps = _ref7.getToggleButtonProps,
        getItemProps = _ref7.getItemProps,
        inputValue = _ref7.inputValue,
        openMenu = _ref7.openMenu,
        isOpen = _ref7.isOpen;
    var filteredInput = isOpen ? inputFilter(inputValue) : [];
    return _react.default.createElement(DropContainer, getRootProps(), label && _react.default.createElement(DropLabel, _extends({}, getLabelProps(), {
      onClick: function onClick() {
        return openMenu();
      },
      error: error,
      disabled: disabled
    }), label, required && _react.default.createElement(RequiredMark, null, "*")), _react.default.createElement("input", _extends({
      type: "hidden"
    }, getInputProps())), autocomplete ? _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(DropContainer, null, _react.default.createElement(DropButton, _extends({
      as: "input",
      style: {
        cursor: 'inherit'
      }
    }, getInputProps({
      isOpen: isOpen,
      placeholder: placeholder,
      onClick: openMenu
    }), {
      error: error,
      disabled: disabled,
      text: _buttonLabel
    })), _react.default.createElement(InputArrowDown, null)), filteredInput.length > 0 && _react.default.createElement(DropList, null, filteredInput.map(function (item) {
      return _react.default.createElement(DropItem, getItemProps({
        item: item,
        isSelected: _isEqual(selectedItem, item),
        key: _getValue(item)
      }), _getLabel(item), _isEqual(selectedItem, item) && _react.default.createElement(CheckIcon, null));
    }))) : _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(DropButton, _extends({}, getToggleButtonProps(), {
      isOpen: isOpen,
      disabled: disabled,
      error: error,
      text: _buttonLabel,
      selectedItem: selectedItem
    }), _buttonLabel, _react.default.createElement(ArrowDown, null)), isOpen && _react.default.createElement(DropList, null, items.map(function (item) {
      return _react.default.createElement(DropItem, getItemProps({
        item: item,
        isSelected: _isEqual(selectedItem, item),
        key: _getValue(item)
      }), _getLabel(item), _isEqual(selectedItem, item) && _react.default.createElement(CheckIcon, null));
    }))));
  }), error && _react.default.createElement(DropError, null, error));
};

Dropdown.defaultProps = {
  autocomplete: false,
  disabled: false,
  error: '',
  items: [],
  label: '',
  onChange: function onChange() {},
  placeholder: 'Select an option',
  required: false,
  selectedItem: ''
};

var itemPropType = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  label: _propTypes.default.string
})]);

Dropdown.propTypes = {
  autocomplete: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  error: _propTypes.default.string,

  /** A list of string or objects with value and label keys */
  items: _propTypes.default.arrayOf(itemPropType),
  label: _propTypes.default.string,
  onChange: _propTypes.default.func,
  placeholder: _propTypes.default.string,
  required: _propTypes.default.bool,
  selectedItem: itemPropType
};
var _default = Dropdown;
exports.default = _default;