"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _downshift = _interopRequireDefault(require("downshift"));

var _Icon = _interopRequireDefault(require("../Icon/Icon"));

var _shared = require("../shared");

var _theme = require("../shared/theme");

var _subComponents = require("../Input/sub-components");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var ID_GENERATOR = (0, _shared.uniqId)('dropdown-');
var ITEM_HEIGHT = '44px';
var MAX_ITEMS_VISIBILITY = 7;
var DropInput = (0, _styledComponents.default)(_subComponents.TextInput).withConfig({
  displayName: "Dropdown__DropInput",
  componentId: "xoew8d-0"
})(["align-items:center;cursor:pointer;display:flex;justify-content:space-between;", ";"], function (_ref) {
  var selectedItem = _ref.selectedItem,
      text = _ref.text,
      neutral500 = _ref.theme.colors.neutral[500];
  return "\n    ".concat(!text ? 'flex-direction: row-reverse;' : '', "\n    ").concat(!selectedItem ? "color: ".concat(neutral500, ";") : '', "\n  ");
});
var ArrowDown = (0, _styledComponents.default)(_Icon.default).attrs({
  name: 'keyboard_arrow_down'
}).withConfig({
  displayName: "Dropdown__ArrowDown",
  componentId: "xoew8d-1"
})(["pointer-events:none;", ""], function (_ref2) {
  var selectedItem = _ref2.selectedItem,
      neutral700 = _ref2.theme.colors.neutral[700];
  return !selectedItem && "\n    color: ".concat(neutral700, ";\n  ");
});
var InputArrowDown = (0, _styledComponents.default)(ArrowDown).withConfig({
  displayName: "Dropdown__InputArrowDown",
  componentId: "xoew8d-2"
})(["position:absolute;", ""], function (_ref3) {
  var _ref3$theme$spacing = _ref3.theme.spacing,
      small = _ref3$theme$spacing.small,
      medium = _ref3$theme$spacing.medium;
  return "\n    top: ".concat(small, "px;\n    right: ").concat(medium * 0.875, "px;\n  ");
});

var DropList = _styledComponents.default.ul.withConfig({
  displayName: "Dropdown__DropList",
  componentId: "xoew8d-3"
})(["border-radius:4px;box-sizing:border-box;list-style:none;max-height:calc(", " * ", ");overflow:auto;padding:0;position:absolute;width:100%;z-index:9999;", ""], ITEM_HEIGHT, MAX_ITEMS_VISIBILITY, function (_ref4) {
  var theme = _ref4.theme;
  var xxsmall = theme.spacing.xxsmall,
      _theme$colors$neutral = theme.colors.neutral,
      neutral100 = _theme$colors$neutral[100],
      neutral300 = _theme$colors$neutral[300];
  return "\n      background-color: ".concat(neutral100, ";\n      border: solid 1.5px ").concat(neutral100, ";\n      margin-top: ").concat(xxsmall, "px;\n      ").concat((0, _shared.shadow)(5, neutral300)({
    theme: theme
  }), ";\n    ");
});

var CheckIcon = (0, _styledComponents.default)(_Icon.default).attrs({
  name: 'check'
}).withConfig({
  displayName: "Dropdown__CheckIcon",
  componentId: "xoew8d-4"
})(["", ""], function (_ref5) {
  var selectedItem = _ref5.selectedItem,
      primary = _ref5.theme.colors.primary[500];
  return !selectedItem && "\n    color: ".concat(primary, ";\n  ");
});

var DropItem = _styledComponents.default.li.withConfig({
  displayName: "Dropdown__DropItem",
  componentId: "xoew8d-5"
})(["box-sizing:border-box;cursor:pointer;", ":last-child{border-bottom-width:0;}&[aria-selected='true']{", "}", ""], function (_ref6) {
  var _ref6$theme = _ref6.theme,
      _ref6$theme$spacing = _ref6$theme.spacing,
      xsmall = _ref6$theme$spacing.xsmall,
      small = _ref6$theme$spacing.small,
      _ref6$theme$colors$ne = _ref6$theme.colors.neutral,
      neutral100 = _ref6$theme$colors$ne[100],
      neutral300 = _ref6$theme$colors$ne[300];
  return "\n    background-color: ".concat(neutral100, ";\n    border-bottom: solid 1.5px ").concat(neutral300, ";\n    padding: ").concat(xsmall * 1.125, "px ").concat(small, "px;\n  ");
}, function (_ref7) {
  var primary = _ref7.theme.colors.primary[100];
  return "\n      background-color: ".concat(primary, ";\n    ");
}, function (_ref8) {
  var isSelected = _ref8.isSelected;
  return isSelected && "\n    display: flex;\n    justify-content: space-between;\n  ";
});

var DropContainer = _styledComponents.default.div.withConfig({
  displayName: "Dropdown__DropContainer",
  componentId: "xoew8d-6"
})(["position:relative;"]);

var _getValue = function _getValue(item) {
  return item ? item.value || item.label || item : '';
};

var _getLabel = function _getLabel(item) {
  return item ? item.label || item.value || item : '';
};

var _isEqual = function _isEqual(selected, item) {
  return _getValue(selected) === _getValue(item);
};

var itemPropType = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({
  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  label: _propTypes.default.string
})]);

var List = function List(_ref9) {
  var theme = _ref9.theme,
      items = _ref9.items,
      selectedItem = _ref9.selectedItem,
      getItemProps = _ref9.getItemProps;
  return _react.default.createElement(DropList, {
    theme: theme
  }, items.map(function (item) {
    return _react.default.createElement(DropItem, _extends({
      theme: theme
    }, getItemProps({
      item: item,
      isSelected: _isEqual(selectedItem, item),
      key: _getValue(item)
    })), _getLabel(item), _isEqual(selectedItem, item) && _react.default.createElement(CheckIcon, {
      theme: theme
    }));
  }));
};

List.propTypes = {
  selectedItem: _propTypes.default.shape(itemPropType).isRequired,
  theme: _propTypes.default.shape({
    colors: _propTypes.default.object,
    spacing: _propTypes.default.object
  }).isRequired,
  items: _propTypes.default.arrayOf(itemPropType).isRequired,
  getItemProps: _propTypes.default.func.isRequired
};

var Dropdown = function Dropdown(_ref10) {
  var label = _ref10.label,
      error = _ref10.error,
      required = _ref10.required,
      disabled = _ref10.disabled,
      items = _ref10.items,
      placeholder = _ref10.placeholder,
      selectedItem = _ref10.selectedItem,
      onChange = _ref10.onChange,
      autocomplete = _ref10.autocomplete,
      theme = _ref10.theme,
      id = _ref10.id,
      rest = _objectWithoutProperties(_ref10, ["label", "error", "required", "disabled", "items", "placeholder", "selectedItem", "onChange", "autocomplete", "theme", "id"]);

  var _buttonLabel = selectedItem ? _getLabel(selectedItem) : placeholder;

  var _highlightedReducer = function _highlightedReducer(_ref11, changes) {
    var selected = _ref11.selectedItem;

    if (changes.isOpen !== undefined && changes.isOpen) {
      var selectedIndex = items.map(_getValue).indexOf(_getValue(selected));
      var withRange = selectedIndex + Math.floor(MAX_ITEMS_VISIBILITY / 2);
      var length = items.length;
      return _objectSpread({}, changes, {
        highlightedIndex: withRange < length ? withRange : length - 1
      });
    }

    return changes;
  };

  var _useState = (0, _react.useState)(id || ID_GENERATOR.next().value),
      _useState2 = _slicedToArray(_useState, 1),
      _id = _useState2[0];

  var inputFilter = function inputFilter(value) {
    return items.filter(function (item) {
      return _getValue(item).toLowerCase().indexOf(value.toLowerCase()) > -1;
    });
  };

  return _react.default.createElement(_shared.FieldGroup, null, _react.default.createElement(_downshift.default, _extends({}, rest, {
    selectedItem: selectedItem,
    onChange: onChange,
    itemToString: _getValue,
    stateReducer: _highlightedReducer
  }), function (_ref12) {
    var getRootProps = _ref12.getRootProps,
        getLabelProps = _ref12.getLabelProps,
        getInputProps = _ref12.getInputProps,
        getToggleButtonProps = _ref12.getToggleButtonProps,
        getItemProps = _ref12.getItemProps,
        inputValue = _ref12.inputValue,
        openMenu = _ref12.openMenu,
        isOpen = _ref12.isOpen;
    var filteredInput = isOpen ? inputFilter(inputValue) : [];
    return _react.default.createElement(DropContainer, getRootProps(), label && _react.default.createElement(_subComponents.InputLabel, _extends({}, getLabelProps(), {
      error: error,
      disabled: disabled,
      htmlFor: _id
    }), label, required && _react.default.createElement(_subComponents.RequiredMark, null, "*")), _react.default.createElement("input", _extends({
      type: "hidden"
    }, getInputProps())), autocomplete ? _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(DropContainer, null, _react.default.createElement(DropInput, _extends({}, getInputProps({
      isOpen: isOpen,
      placeholder: placeholder,
      onClick: openMenu
    }), {
      style: {
        cursor: 'inherit'
      },
      error: error,
      disabled: disabled,
      text: _buttonLabel,
      theme: theme,
      id: _id
    })), _react.default.createElement(InputArrowDown, {
      theme: theme
    })), filteredInput.length > 0 && _react.default.createElement(List, {
      items: filteredInput,
      theme: theme,
      selectedItem: selectedItem,
      getItemProps: getItemProps
    })) : _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(DropInput, _extends({}, getToggleButtonProps(), {
      as: "button",
      isOpen: isOpen,
      disabled: disabled,
      error: error,
      text: _buttonLabel,
      selectedItem: selectedItem,
      theme: theme,
      id: _id
    }), _buttonLabel, _react.default.createElement(ArrowDown, {
      theme: theme
    })), isOpen && _react.default.createElement(List, {
      items: items,
      theme: theme,
      selectedItem: selectedItem,
      getItemProps: getItemProps
    })));
  }), error && _react.default.createElement(_subComponents.InputErrorMessage, null, error));
};

Dropdown.defaultProps = {
  autocomplete: false,
  disabled: false,
  required: false,
  error: '',
  id: '',
  label: '',
  placeholder: 'Select an option',
  selectedItem: '',
  items: [],
  onChange: function onChange() {},
  theme: {
    colors: _theme.colors,
    spacing: _theme.spacing
  }
};
Dropdown.propTypes = {
  autocomplete: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  required: _propTypes.default.bool,
  error: _propTypes.default.string,
  id: _propTypes.default.string,
  label: _propTypes.default.string,
  placeholder: _propTypes.default.string,
  selectedItem: itemPropType,
  onChange: _propTypes.default.func,

  /** A list of string or objects with value and label keys */
  items: _propTypes.default.arrayOf(itemPropType),
  theme: _propTypes.default.shape({
    colors: _propTypes.default.object,
    spacing: _propTypes.default.object
  })
};
var _default = Dropdown;
exports.default = _default;