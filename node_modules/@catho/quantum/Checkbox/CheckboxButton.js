"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _HiddenInput = _interopRequireDefault(require("../shared/HiddenInput"));

var _uniqId = _interopRequireDefault(require("../shared/uniqId"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _Button = _interopRequireDefault(require("../Button"));

var _CheckboxGroupContext = _interopRequireDefault(require("./CheckboxGroupContext"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ID_GENERATOR = (0, _uniqId.default)('checkbox-button-');
var HiddenCheckbox = (0, _styledComponents.default)(_HiddenInput.default).attrs({
  type: 'checkbox'
}).withConfig({
  displayName: "CheckboxButton__HiddenCheckbox",
  componentId: "sc-1rvg70v-0"
})([""]);
HiddenCheckbox.displayName = 'HiddenCheckbox';
var LockIcon = (0, _styledComponents.default)(_Icon.default).attrs({
  name: 'lock'
}).withConfig({
  displayName: "CheckboxButton__LockIcon",
  componentId: "sc-1rvg70v-1"
})([""]);

var Wrapper = _styledComponents.default.div.withConfig({
  displayName: "CheckboxButton__Wrapper",
  componentId: "sc-1rvg70v-2"
})(["", " ", "{font-size:17px;margin-left:8px;}"], function (_ref) {
  var inline = _ref.inline;
  return inline && "\n    display: inline-block;\n    margin-right: 16px;\n    vertical-align: top;\n\n    :last-child {\n      margin-right: 0;\n    }\n  ";
}, LockIcon);

var CheckButton = (0, _styledComponents.default)(_Button.default).withConfig({
  displayName: "CheckboxButton__CheckButton",
  componentId: "sc-1rvg70v-3"
})(["margin-bottom:16px;display:inline-flex;"]);

var CheckboxButton = function CheckboxButton(_ref2) {
  var children = _ref2.children,
      id = _ref2.id,
      label = _ref2.label,
      value = _ref2.value,
      checked = _ref2.checked,
      disabled = _ref2.disabled,
      name = _ref2.name,
      icon = _ref2.icon,
      skin = _ref2.skin,
      errorProp = _ref2.error,
      onChangeProp = _ref2.onChange,
      props = _objectWithoutProperties(_ref2, ["children", "id", "label", "value", "checked", "disabled", "name", "icon", "skin", "error", "onChange"]);

  var _useContext = (0, _react.useContext)(_CheckboxGroupContext.default),
      _useContext$error = _useContext.error,
      error = _useContext$error === void 0 ? errorProp : _useContext$error,
      _useContext$onChange = _useContext.onChange,
      onChange = _useContext$onChange === void 0 ? onChangeProp : _useContext$onChange,
      inline = _useContext.inline;

  var _useState = (0, _react.useState)(id || ID_GENERATOR.next().value),
      _useState2 = _slicedToArray(_useState, 1),
      _id = _useState2[0];

  var checkSkin;

  if (error) {
    checkSkin = 'error';
  } else if (disabled) {
    checkSkin = 'neutral';
  } else if (checked) {
    checkSkin = skin;
  }

  return _react.default.createElement(Wrapper, {
    inline: inline
  }, _react.default.createElement(CheckButton, {
    checked: checked,
    disabled: disabled,
    error: error,
    htmlFor: _id,
    skin: checkSkin,
    icon: icon,
    stroked: !checked,
    $as: "label"
  }, _react.default.createElement(HiddenCheckbox, _extends({}, props, {
    checked: checked,
    disabled: disabled,
    error: error,
    id: _id,
    name: name,
    onChange: onChange,
    skin: checkSkin,
    value: value
  })), children || label || value, disabled && _react.default.createElement(LockIcon, null)));
};

CheckboxButton.defaultProps = {
  checked: false,
  children: '',
  skin: 'primary',
  disabled: false,
  error: '',
  icon: undefined,
  id: '',
  label: '',
  onChange: function onChange() {},
  value: ''
};
CheckboxButton.propTypes = {
  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]),
  skin: _propTypes.default.oneOf(['neutral', 'primary', 'success', 'warning', 'error']),
  checked: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  error: _propTypes.default.string,
  id: _propTypes.default.string,
  icon: _propTypes.default.string,
  label: _propTypes.default.string,
  name: _propTypes.default.string.isRequired,
  onChange: _propTypes.default.func,
  value: _propTypes.default.string
};
CheckboxButton.displayName = 'CheckboxButton';
var _default = CheckboxButton;
exports.default = _default;