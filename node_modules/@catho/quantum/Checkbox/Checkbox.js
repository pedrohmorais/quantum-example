"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _shared = require("../shared");

var _HiddenInput = _interopRequireDefault(require("../shared/HiddenInput"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _CheckboxGroupContext = _interopRequireDefault(require("./CheckboxGroupContext"));

var _theme = require("../shared/theme");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var CHECKBOX_SIZE = '18px';

var Wrapper = _styledComponents.default.div.withConfig({
  displayName: "Checkbox__Wrapper",
  componentId: "sc-1ca5whm-0"
})([""]);

var CheckboxWrapper = _styledComponents.default.div.withConfig({
  displayName: "Checkbox__CheckboxWrapper",
  componentId: "sc-1ca5whm-1"
})(["display:flex;position:relative;"]);

var CheckboxLabel = (0, _styledComponents.default)(_shared.Label).withConfig({
  displayName: "Checkbox__CheckboxLabel",
  componentId: "sc-1ca5whm-2"
})(["", ""], function (_ref) {
  var _ref$theme = _ref.theme,
      neutralColor = _ref$theme.colors.neutral[700],
      xsmall = _ref$theme.spacing.xsmall;
  return "\n    color: ".concat(neutralColor, ";\n    margin: 0 0 0 ").concat(xsmall, "px;\n  ");
});
CheckboxLabel.displayName = 'CheckboxLabel';
var CheckIcon = (0, _styledComponents.default)(_Icon.default).attrs({
  name: 'check'
}).withConfig({
  displayName: "Checkbox__CheckIcon",
  componentId: "sc-1ca5whm-3"
})([""]);
var HiddenCheckbox = (0, _styledComponents.default)(_HiddenInput.default).attrs({
  type: 'checkbox'
}).withConfig({
  displayName: "Checkbox__HiddenCheckbox",
  componentId: "sc-1ca5whm-4"
})(["cursor:pointer;height:100%;width:100%;+ ", "{align-items:center;border-radius:2px;box-sizing:border-box;color:transparent;display:flex;font-weight:bold;height:", ";justify-content:center;transition:all 0.2s ease-in-out;width:", ";", "}:checked{+ ", "{border-width:0;", "}}:hover + ", ",:focus + ", "{", "}", " &[disabled]{cursor:not-allowed;", ":hover + ", "{", "}}"], CheckIcon, CHECKBOX_SIZE, CHECKBOX_SIZE, function (_ref2) {
  var _ref2$theme = _ref2.theme,
      _ref2$theme$colors$ne = _ref2$theme.colors.neutral,
      neutral100 = _ref2$theme$colors$ne[100],
      neutral500 = _ref2$theme$colors$ne[500],
      xxxsmall = _ref2$theme.spacing.xxxsmall,
      fontSize = _ref2$theme.baseFontSize;
  return "\n      background-color: ".concat(neutral100, ";\n      border: 2px solid  ").concat(neutral500, ";\n      font-size: ").concat(fontSize, "px;\n      margin-top: ").concat(xxxsmall, "px;\n    ");
}, CheckIcon, function (_ref3) {
  var _ref3$theme$colors = _ref3.theme.colors,
      primaryColor = _ref3$theme$colors.primary[500],
      neutralColor = _ref3$theme$colors.neutral[100];
  return "\n        background-color: ".concat(primaryColor, ";\n        color: ").concat(neutralColor, ";\n      ");
}, CheckIcon, CheckIcon, function (_ref4) {
  var theme = _ref4.theme;
  var primaryColor = theme.colors.primary[500];
  return "\n        border-color: ".concat(primaryColor, ";\n        ").concat((0, _shared.shadow)(5, primaryColor)({
    theme: theme
  }), "\n      ");
}, function (_ref5) {
  var error = _ref5.error,
      theme = _ref5.theme;
  var errorColor = theme.colors.error[500];
  return error && "\n      + ".concat(CheckIcon, " {\n        border-color: ").concat(errorColor, ";\n      }\n\n      :checked + ").concat(CheckIcon, " {\n        background-color: ").concat(errorColor, ";\n      }\n\n      :hover +  ").concat(CheckIcon, ", :focus +  ").concat(CheckIcon, " {\n        border-color: ").concat(errorColor, ";\n        ").concat((0, _shared.shadow)(5, errorColor)({
    theme: theme
  }), "\n      }\n    ");
}, function (_ref6) {
  var _ref6$theme$colors$ne = _ref6.theme.colors.neutral,
      neutral500 = _ref6$theme$colors$ne[500],
      neutral300 = _ref6$theme$colors$ne[300];
  return "\n      ~ ".concat(CheckboxLabel, " {\n        color: ").concat(neutral500, ";\n      }\n\n      + ").concat(CheckIcon, " {\n        border-color: ").concat(neutral500, ";\n        background-color: ").concat(neutral300, ";\n      }\n\n      :checked + ").concat(CheckIcon, " {\n        background-color: ").concat(neutral500, ";\n      }\n    ");
}, CheckIcon, (0, _shared.shadow)());
HiddenCheckbox.displayName = 'HiddenCheckbox';

var Checkbox = function Checkbox(_ref7) {
  var children = _ref7.children,
      id = _ref7.id,
      label = _ref7.label,
      value = _ref7.value,
      theme = _ref7.theme,
      errorProp = _ref7.error,
      onChangeProp = _ref7.onChange,
      props = _objectWithoutProperties(_ref7, ["children", "id", "label", "value", "theme", "error", "onChange"]);

  var context = (0, _react.useContext)(_CheckboxGroupContext.default);
  var errorContext = context.error;
  var _context$error = context.error,
      error = _context$error === void 0 ? errorProp : _context$error,
      _context$onChange = context.onChange,
      onChange = _context$onChange === void 0 ? onChangeProp : _context$onChange;
  return _react.default.createElement(Wrapper, null, _react.default.createElement(CheckboxWrapper, null, _react.default.createElement(HiddenCheckbox, _extends({}, props, {
    id: id,
    error: error,
    value: value,
    onChange: onChange,
    theme: theme
  })), _react.default.createElement(CheckIcon, null), _react.default.createElement(CheckboxLabel, {
    htmlFor: id,
    theme: theme
  }, children || label || value)), error && !errorContext && _react.default.createElement(_shared.ErrorMessage, null, error));
};

Checkbox.propTypes = {
  checked: _propTypes.default.bool,
  disabled: _propTypes.default.bool,
  children: _propTypes.default.string,
  error: _propTypes.default.string,
  id: _propTypes.default.string,
  label: _propTypes.default.string,
  name: _propTypes.default.string.isRequired,
  value: _propTypes.default.string,
  onChange: _propTypes.default.func,
  theme: _propTypes.default.shape({
    colors: _propTypes.default.object,
    spacing: _propTypes.default.object,
    baseFontSize: _propTypes.default.number
  })
};
Checkbox.defaultProps = {
  checked: false,
  disabled: false,
  children: '',
  error: '',
  id: '',
  label: '',
  value: '',
  onChange: function onChange() {},
  theme: {
    colors: _theme.colors,
    spacing: _theme.spacing,
    baseFontSize: _theme.baseFontSize
  }
};
Checkbox.displayName = 'Checkbox';
var _default = Checkbox;
exports.default = _default;