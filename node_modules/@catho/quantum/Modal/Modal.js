"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _Card = _interopRequireDefault(require("../Card"));

var _Button = _interopRequireDefault(require("../Button"));

var _shared = require("../Grid/sub-components/shared");

var _subComponents = require("./sub-components");

var _shared2 = require("../shared");

var _theme = require("../shared/theme");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _templateObject() {
  var data = _taggedTemplateLiteral(["width: ", ";"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function getBreakpoint(_ref) {
  var themeBreakpoints = _ref.theme.breakpoints;
  var sizes = {
    xsmall: '90%',
    small: '400px',
    medium: '600px',
    large: '800px'
  };
  return Object.entries(sizes).map(function (_ref2) {
    var _ref3 = _slicedToArray(_ref2, 2),
        breakpoint = _ref3[0],
        value = _ref3[1];

    return (0, _shared.query)(themeBreakpoints)[breakpoint](_templateObject(), value);
  });
}

var ModalCard = (0, _styledComponents.default)(_Card.default).withConfig({
  displayName: "Modal__ModalCard",
  componentId: "sc-300qpr-0"
})(["", "{padding-right:", ";}", ""], _Card.default.Header, function (_ref4) {
  var xxxlarge = _ref4.theme.spacing.xxxlarge;
  return "".concat(xxxlarge, "px");
}, getBreakpoint);
var CloseIcon = (0, _styledComponents.default)(_Button.default.Icon).attrs({
  icon: 'close'
}).withConfig({
  displayName: "Modal__CloseIcon",
  componentId: "sc-300qpr-1"
})(["position:absolute;", ";"], function (_ref5) {
  var medium = _ref5.theme.spacing.medium;
  return "\n    top: ".concat(medium, "px;\n    right: ").concat(medium, "px;\n  ");
});
CloseIcon.displayName = 'CloseIcon';

var ModalWrapper = _styledComponents.default.div.withConfig({
  displayName: "Modal__ModalWrapper",
  componentId: "sc-300qpr-2"
})(["align-items:center;background-color:", ";display:flex;height:100vh;justify-content:center;position:fixed;top:0;width:100vw;"], function (_ref6) {
  var neutral = _ref6.theme.colors.neutral;
  return (0, _shared2.hexToRgba)(neutral[700], 0.5);
});

ModalWrapper.displayName = 'ModalWrapper';

var Modal =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Modal, _React$Component);

  function Modal(props) {
    var _this;

    _classCallCheck(this, Modal);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Modal).call(this, props));

    _this.handleClickOutside = function (_ref7) {
      var target = _ref7.target;
      var onClose = _this.props.onClose;
      var modalRef = _this.modalWrapperRef.current;

      if (target === modalRef) {
        onClose();
      }
    };

    _this.handleEscKey = function (_ref8) {
      var key = _ref8.key;
      var onClose = _this.props.onClose;

      if (key === 'Escape') {
        onClose();
      }
    };

    _this.handleBackwardTab = function (e) {
      if (document.activeElement === _this.firstFocusableElement) {
        e.preventDefault();

        _this.lastFocusableElement.focus();
      }
    };

    _this.handleFowardTab = function (e) {
      if (document.activeElement === _this.lastFocusableElement) {
        e.preventDefault();

        _this.firstFocusableElement.focus();
      }
    };

    _this.handleKeyDown = function (e) {
      if (e.key === 'Tab') {
        if (_this.focusableElements.length === 1) {
          return e.preventDefault();
        }

        if (e.shiftKey) {
          return _this.handleBackwardTab(e);
        }

        return _this.handleFowardTab(e);
      }

      return false;
    };

    _this.modalWrapperRef = _react.default.createRef();
    _this.modalOverlay = document.createElement('section');
    _this.focusableElements = [];
    _this.focusedElementBeforeOpen = document.activeElement;
    _this.firstFocusableElement = null;
    _this.lastFocusableElement = null;
    return _this;
  }

  _createClass(Modal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _document = document,
          body = _document.body;
      body.appendChild(this.modalOverlay);
      this.focusableElements = this.modalOverlay.querySelectorAll("a[href],\n      area[href],\n      input:not([disabled]),\n      select:not([disabled]),\n      textarea:not([disabled]),\n      button:not([disabled]),\n      [tabindex=\"0\"]");
      this.firstFocusableElement = this.focusableElements[0]; // eslint-disable-line

      this.lastFocusableElement = this.focusableElements[this.focusableElements.length - 1];
      this.firstFocusableElement.focus();
      window.addEventListener('keydown', this.handleKeyDown);
      window.addEventListener('keydown', this.handleEscKey);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _document2 = document,
          body = _document2.body;
      this.focusedElementBeforeOpen.focus();
      body.removeChild(this.modalOverlay);
      window.removeEventListener('keydown', this.handleKeyDown);
      window.removeEventListener('keydown', this.handleEscKey);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          onClose = _this$props.onClose,
          closeButtonAriaLabel = _this$props.closeButtonAriaLabel,
          theme = _this$props.theme,
          rest = _objectWithoutProperties(_this$props, ["children", "onClose", "closeButtonAriaLabel", "theme"]);

      return _reactDom.default.createPortal(_react.default.createElement(ModalWrapper, _extends({
        onClick: this.handleClickOutside,
        ref: this.modalWrapperRef,
        role: "dialog",
        theme: theme
      }, rest), _react.default.createElement(ModalCard, {
        theme: theme
      }, children, _react.default.createElement(CloseIcon, {
        onClick: onClose,
        "aria-label": closeButtonAriaLabel,
        theme: theme
      }))), this.modalOverlay);
    }
  }]);

  return Modal;
}(_react.default.Component);

Modal.Header = _subComponents.Header;
Modal.HeaderText = _subComponents.HeaderText;
Modal.Content = _subComponents.Content;
Modal.Title = _subComponents.Title;
Modal.Footer = _subComponents.Footer;
Modal.propTypes = {
  children: _propTypes.default.oneOfType([_propTypes.default.arrayOf(_propTypes.default.node), _propTypes.default.node]),

  /** Function to be called when close icon is clicked. */
  onClose: _propTypes.default.func,

  /** aria-label property value for the close button icon. */
  closeButtonAriaLabel: _propTypes.default.string,
  theme: _propTypes.default.shape({
    breakpoints: _propTypes.default.object,
    colors: _propTypes.default.object,
    spacing: _propTypes.default.object,
    components: _propTypes.default.shape({
      button: _propTypes.default.object
    })
  })
};
Modal.defaultProps = {
  children: undefined,
  onClose: function onClose() {},
  closeButtonAriaLabel: 'close dialog',
  theme: {
    breakpoints: _theme.breakpoints,
    colors: _theme.colors,
    spacing: _theme.spacing,
    components: {
      button: _theme.components.button
    }
  }
};
var _default = Modal;
exports.default = _default;