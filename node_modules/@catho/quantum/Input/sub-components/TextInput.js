"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _theme = require("../../shared/theme");

var _shared = require("../../shared");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TextInput = _styledComponents.default.input.withConfig({
  displayName: "TextInput",
  componentId: "ado1el-0"
})(["border-radius:4px;box-sizing:border-box;box-sizing:border-box;font-size:initial;letter-spacing:0.2px;outline:none;transition:all 0.2s ease-in-out;width:100%;&::-webkit-inner-spin-button,&::-webkit-outer-spin-button{-webkit-appearance:none;margin:0;}&::-webkit-calendar-picker-indicator,&::-webkit-search-cancel-button{display:none;}", ""], function (_ref) {
  var defaultValue = _ref.defaultValue,
      error = _ref.error,
      hasRightIcon = _ref.hasRightIcon,
      hasLeftIcon = _ref.hasLeftIcon,
      placeholder = _ref.placeholder,
      theme = _ref.theme,
      value = _ref.value;
  var _theme$colors = theme.colors,
      primaryColor = _theme$colors.primary[500],
      _theme$colors$error = _theme$colors.error,
      error100 = _theme$colors$error[100],
      error500 = _theme$colors$error[500],
      _theme$colors$neutral = _theme$colors.neutral,
      neutral100 = _theme$colors$neutral[100],
      neutral300 = _theme$colors$neutral[300],
      neutral500 = _theme$colors$neutral[500],
      neutral700 = _theme$colors$neutral[700],
      _theme$spacing = theme.spacing,
      xsmall = _theme$spacing.xsmall,
      small = _theme$spacing.small,
      xxlarge = _theme$spacing.xxlarge;
  var mainColor = error ? error500 : primaryColor;
  return "\n      background-color: ".concat(neutral100, ";\n      border: 2px solid ").concat(neutral500, ";\n      color: ").concat(neutral700, ";\n      margin-top: ").concat(xsmall, "px;\n      padding: ").concat(xsmall, "px ").concat(small, "px;\n\n      ").concat(hasRightIcon ? "padding-right: ".concat(xxlarge, "px;") : '', "\n      ").concat(hasLeftIcon ? "padding-left: ".concat(xxlarge, "px;") : '', "\n      ").concat(error ? "border-color: ".concat(mainColor, ";") : '', "\n      ").concat(placeholder && !defaultValue && !value ? "color: ".concat(neutral500, ";") : '', "\n\n      :hover, :focus {\n        border-color: ").concat(mainColor, ";\n        ").concat((0, _shared.shadow)(5, mainColor)({
    theme: theme
  }), "\n      }\n\n      &[disabled] {\n        background-color: ").concat(neutral300, ";\n        border-color: ").concat(neutral500, ";\n        box-shadow: none;\n        color: ").concat(neutral500, ";\n        cursor: not-allowed;\n      }\n\n      :-webkit-autofill {\n        box-shadow: 0 0 0 1000px ").concat(error100, " inset;\n      }\n    ");
});

TextInput.displayName = 'TextInput';
TextInput.propTypes = {
  theme: _propTypes.default.shape({
    spacing: _propTypes.default.object,
    colors: _propTypes.default.object
  })
};
TextInput.defaultProps = {
  theme: {
    spacing: _theme.spacing,
    colors: _theme.colors
  }
};
var _default = TextInput;
exports.default = _default;